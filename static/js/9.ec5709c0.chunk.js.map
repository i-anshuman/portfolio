{"version":3,"sources":["components/card/styled.js","components/card/index.jsx","slides/projects.jsx","components/animate-texts/index.jsx","components/title/index.jsx","styles/projects.module.scss"],"names":["CardInfo","styled","div","Title","h2","Desc","p","LinkBox","Link","a","CardWraper","image","Card","title","description","live","code","href","target","rel","className","defaultProps","SwiperCore","use","Effect","Pagination","Projects","id","styles","projects","projects__greet","projects__content","spaceBetween","slidesPerView","effect","loop","centeredSlides","coverflowEffect","rotate","stretch","depth","modifier","pagination","el","type","clickable","breakpoints","768","onSlideChange","console","log","map","slide","idx","AnimateText","children","transition","from","to","delay","useState","count","setCount","useEffect","index","timer","setInterval","increment","length","clearInterval","child","style","opacity","transform","module","exports"],"mappings":"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","file":"static/js/9.ec5709c0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CardInfo = styled.div`\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 10px;\r\n  background: var(--overlay);\r\n  transition: top 0.4s var(--tf-1);\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-family: var(--other);\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nexport const Desc = styled.p`\r\n  margin: 0;\r\n  font-family: var(--body);\r\n  font-size: 1rem;\r\n  text-align: center;\r\n  line-height: 160%;\r\n`;\r\n\r\nexport const LinkBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  margin-top: 30px;\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: opacity 0.4s var(--tf-1);\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  width: auto;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  border: 2px solid var(--on-overlay);\r\n  padding: 10px 15px;\r\n  font-family: var(--code);\r\n  text-align: center;\r\n  transition: all 0.4s ease;\r\n\r\n  &:hover {\r\n    color: var(--primary);\r\n    border-color: var(--primary);\r\n  }\r\n`;\r\n\r\nexport const CardWraper = styled.div`\r\n  position: relative;\r\n  background: url(${({image}) => image});\r\n  background-size: 100% 100%;\r\n  min-width: 280px;\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 300px;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n\r\n  &:hover ${CardInfo} {\r\n    top: 25%;\r\n  }\r\n\r\n  &:hover ${LinkBox} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { CardWraper, CardInfo, Title, Desc, LinkBox, Link } from './styled';\r\n\r\nconst Card = ({ title, description, image, live, code }) => {\r\n  return (\r\n    <CardWraper image={image}>\r\n      <CardInfo>\r\n        <Title>{title}</Title>\r\n        <Desc>{description}</Desc>\r\n        <LinkBox>\r\n          <Link href={live} target=\"_blank\" rel=\"noreferrer\">\r\n            Live <i className=\"fa fa-globe-americas\"></i>\r\n          </Link>\r\n          <Link href={code} target=\"_blank\" rel=\"noreferrer\">\r\n            Code <i className=\"fa fa-code\"></i>\r\n          </Link>\r\n        </LinkBox>\r\n      </CardInfo>\r\n    </CardWraper>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  live: PropTypes.string,\r\n  code: PropTypes.string,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  description: PropTypes.string\r\n};\r\n\r\nCard.defaultProps = {\r\n  live: \"\",\r\n  code: \"\",\r\n  title: \"\",\r\n  image: \"\",\r\n  description: \"\"\r\n};\r\n\r\nexport default Card;\r\n","import PropTypes from 'prop-types';\r\nimport Title from '../components/title';\r\nimport Card from '../components/card';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { EffectCoverflow as Effect, Pagination } from 'swiper';\r\nimport { projects } from '../portfolio';\r\nimport styles from '../styles/projects.module.scss';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/effect-coverflow/effect-coverflow.scss';\r\nSwiperCore.use([Effect, Pagination]);\r\n\r\nconst Projects = ({ className, id}) => {\r\n  return (\r\n    <section className={`${className} ${styles.projects}`} id={id}>\r\n      <h1 className={styles.projects__greet}>\r\n        <Title>Projects</Title>\r\n      </h1>\r\n      <div className={styles.projects__content}>\r\n        <Swiper\r\n          spaceBetween={0}\r\n          slidesPerView={1}\r\n          effect=\"coverflow\"\r\n          loop\r\n          centeredSlides\r\n          coverflowEffect= {{\r\n            rotate: 50,\r\n            stretch: 0,\r\n            depth: 100,\r\n            modifier: 1\r\n          }}\r\n          pagination={{\r\n            el: '.swiper-pagination',\r\n            type: 'bullets',\r\n            clickable: true\r\n          }}\r\n          breakpoints={{768: {slidesPerView: 2}}}\r\n          onSlideChange={() => console.log('Slide Change')}\r\n        >\r\n          {\r\n            projects.map((slide, idx) => (\r\n              <SwiperSlide key={idx}>\r\n                <Card {...slide} />\r\n              </SwiperSlide>\r\n            ))\r\n          }\r\n        </Swiper>\r\n        <div className=\"swiper-pagination\"></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nProjects.defaultProps = {\r\n  className: \"\"\r\n};\r\n\r\nProjects.propTypes = {\r\n  id: PropTypes.string,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AnimateText = ({ children, transition: { from, to }, delay, className }) => {\r\n  \r\n  const [ count, setCount ] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n    let timer = setInterval(() => {\r\n      let increment = (children[index] === \" \") ? 2 : 1;\r\n      setCount(count => count + increment);\r\n      index++;\r\n      if (index === children.length) {\r\n        clearInterval(timer);\r\n        timer = null;\r\n      }\r\n    }, delay);\r\n  }, [delay, children]);\r\n\r\n  useEffect(() => {\r\n    setCount(-1);\r\n  }, [children]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        [...children].map((child, idx) => (\r\n          <span key={ idx }\r\n            className={ className }\r\n            style={ (idx > count) ? from : to }\r\n          >\r\n            { (child === ' ') ? '\\u00A0' : child }\r\n          </span>\r\n        ))\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nAnimateText.defaultProps = {\r\n  delay: 0,\r\n  transition: {}\r\n};\r\n\r\nAnimateText.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  delay: PropTypes.number,\r\n  transition: PropTypes.exact({\r\n    from: PropTypes.object,\r\n    to: PropTypes.object\r\n  })\r\n};\r\n\r\nexport default AnimateText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimateText from '../animate-texts';\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <AnimateText delay={100}\r\n      transition={{\r\n        from: {\r\n          opacity: 0,\r\n          transform: `translateX(500px) rotate(90deg)`\r\n        },\r\n        to: {\r\n          opacity: 1,\r\n          transform: `translateY(0px) rotate(0deg)`\r\n        }\r\n      }}\r\n    >\r\n      { children }\r\n    </AnimateText>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Title;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects__greet\":\"projects_projects__greet__q5wws\",\"expand\":\"projects_expand__2APTM\",\"projects__content\":\"projects_projects__content__GwJPW\"};"],"sourceRoot":""}